# Угадай число

# --- Игра будет состоять (в начале) из трёх блоков:
# --- 1. приветствие
# --- 2. главный цикл игры (main_f cycle)
# --- 3. финальная надпись

import random

lowDigit = 10     # нижняя граница случайного числа
highDigit = 50    # верхняя граница случайного числа
digit = 0         # загаданное компьютером число

countInput = 0    # количество попыток угадать
win = False       # угадал текущее число?
playGame = True   # продолжается ли игра?
x = 0             # число, которое вводит пользователь
startScore = 100  # начальное количество очков
score = 0         # текущее количество очков
maxScore = 0      # максимальное за сессию игры

# ========================================

while playGame:                                  # Main cycle!
    digit = random.randint(lowDigit, highDigit)  # загадываем число
    print("-" * 30)                              # оформление
    score = startScore                           # очки ставим на максимум доступных
    print("Компьютер загадал число, попробуйте отгадать!")
    # print(f"<<< Загаданное число: {digit} >>>")  # чит-подсказка, после тестирования игры удалить

    while not win and score > 0:                 # внутренний цикл, отвечает за один раунд
        print("-" * 30)
        print(f"заработано очков: {score}")      # это всё оформление, интерфейс
        print(f"Рекорд: {maxScore}")

        x = ""                                   # сбрасываем для условия while
        while not x.isdigit():
            x = input(f"Введите число от {lowDigit} до {highDigit}: ")
            if not x.isdigit():
                print("." * 27 + " Введите, пожалуйста, число.")

        x = int(x)                    # преобразование из строки в целое число
        if x == digit:
            win = True
        else:
            length = abs(x - digit)
            if length < 3:
                print("Очень горячо!")
            elif length < 5:
                print("Горячо!")
            elif length < 10:
                print("Тепло")
            elif length < 15:
                print("Прохладно")
            elif length < 20:
                print("Холодно")
            else:
                print("Ледяной ветер")

            if countInput == 7:
                score -= 10            # Уменьшаем очки, "стоимость подсказки":
                if digit % 2 == 0:
                    print("Число чётное")
                else:
                    print("Число нечётное")
            elif countInput == 6:
                score -= 8
                if digit % 3 == 0:
                    print("Число делится на 3")
                else:
                    print("Число не делится на 3")
            elif countInput == 5:
                score -= 4
                if digit % 4 == 0:
                    print("Число делится на 4")
                else:
                    print("Число не делится на 4")
            elif 5 > countInput > 2:
                score -= 2
                if x > digit:
                    print("Загаданное число МЕНЬШЕ вашего")
                else:
                    print("Загаданное число БОЛЬШЕ вашего")
            score -= 5                # за каждый ход вычитаем 5 из очков
        countInput += 1               # обязательно увеличиваем количество "сделанных ходов"

    # высчитываем максимальное количество очков
    if score > maxScore:
        maxScore = score

    print("*" * 40)                   # оформление
    if x == digit:
        print(f"""Победа! Поздравляем!
Вы заработали {score} очков.
Ваш рекорд на сегодня: {maxScore}""")
    else:
        print("Ой, у вас закончились очки. Вы проиграли :(")

    # сыграть еще?
    if input("Enter - сыграть ещё, 0 - выход ") == "0":
        playGame = False
    else:
        win = False

# После того, как пользователь закончил игру:
print("*" * 40)
print("""Спасибо, что сыграли в мою игру!
Возвращайтесь скорей! Буду ждать с нетерпением!
P.S.: Вы хорошо держались :)""")

print("*" * 40)                       # оформление
input("Нажмите Enter для выхода...")  # провоцирует задержку программы
quit()                                # выход из интерпретатора